variables:
  project: '$(Build.SourcesDirectory)\src\iOS.Essentials\Arbus.iOS.Essentials.csproj'
  nugetFeed: 'NuGet.org'
  buildConfiguration: 'Release'
  forDeployment: ${{ startsWith(variables['Build.SourceBranch'], 'refs/heads/release/ios/') }}

pool:
  vmImage: 'Windows-latest'

stages:
  - stage: build
    displayName: Build
    jobs:
      - job: build_job
        displayName: Build
        steps:
        - checkout: self
          fetchDepth: 1
        - task: DotNetCoreCLI@2
          displayName: 'Restore workloads'
          inputs:
            command: 'custom'
            custom: 'workload'
            arguments: 'restore  $(project)'
        - task: DotNetCoreCLI@2
          displayName: 'Build iOS.Essentials'
          inputs:
            command: build
            projects: $(project)
            arguments: '-c $(buildConfiguration) -o $(Build.ArtifactStagingDirectory)/Binaries'
            outputDir: ''

  - stage: deploy
    displayName: Deploy
    dependsOn: build
    condition: and(succeeded(), eq(variables.forDeployment, 'true'))
    jobs:
      - job: pack
        displayName: Pack NuGet
        workspace:
          clean: all
        steps:
          - checkout: self
            fetchDepth: 1
          - task: DotNetCoreCLI@2
            displayName: 'Restore workloads'
            inputs:
              command: 'custom'
              custom: 'workload'
              arguments: 'restore  $(project)'
          - task: DotNetCoreCLI@2
            displayName: 'Pack iOS.Essentials'
            inputs:
              command: custom
              custom: pack
              searchPatternPack: $(project)
              arguments: >
                $(project)
                --output $(Build.ArtifactStagingDirectory)
                -p:Configuration=$(buildConfiguration);Version=$(Build.SourceBranchName)
          - task: NuGetCommand@2
            displayName: 'Push to $(nugetFeed)'
            inputs:
              command: 'push'
              packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg'
              nuGetFeedType: 'external'
              publishFeedCredentials: '$(nugetFeed)'
